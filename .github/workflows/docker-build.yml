name: Build and Push Docker Image

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: false
        default: 'latest'
        type: string

env:
  REGISTRY: docker.io
  IMAGE_NAME: masterbt77/airflow-custom

permissions:
  contents: read
  packages: write
  security-events: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=dev,enable=${{ startsWith(github.ref, 'refs/heads/dev-') }}
          type=raw,value={{branch}},enable=${{ startsWith(github.ref, 'refs/heads/dev-') }}
          type=raw,value=${{ github.event.inputs.version }},enable=${{ github.event_name == 'workflow_dispatch' }}
          type=sha,prefix=sha-,format=short
        labels: |
          org.opencontainers.image.title=Custom Airflow
          org.opencontainers.image.description=Custom Apache Airflow with additional packages
          org.opencontainers.image.vendor=brayantcw
          org.opencontainers.image.version=${{ github.event.inputs.version || 'latest' }}

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: ./docker_image
        file: ./docker_image/dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          AIRFLOW_VERSION=3.0.2

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.IMAGE_NAME }}@${{ steps.build.outputs.digest }}
        format: 'table'

    - name: Output image details
      run: |
        echo "Image pushed to: ${{ env.IMAGE_NAME }}"
        echo "Tags: ${{ steps.meta.outputs.tags }}"
        echo "Digest: ${{ steps.build.outputs.digest }}"