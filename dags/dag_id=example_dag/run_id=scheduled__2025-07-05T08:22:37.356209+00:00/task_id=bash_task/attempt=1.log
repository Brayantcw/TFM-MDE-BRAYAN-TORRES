{"timestamp":"2025-07-05T08:26:34.415771","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-05T08:26:34.416056","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/example_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-05T08:26:34.423779","level":"info","event":"Tmp dir root location: /tmp","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-05T08:26:34.424078","level":"info","event":"Running command: ['/usr/bin/bash', '-c', 'echo \"Hello from Bash!\" && date']","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-05T08:26:34.429704","level":"info","event":"Output:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-05T08:26:34.430376","level":"info","event":"Hello from Bash!","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-05T08:26:34.430679","level":"info","event":"Sat Jul  5 08:26:34 UTC 2025","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-05T08:26:34.430740","level":"info","event":"Command exited with return code 0","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-05T08:26:34.431124","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0197d9b1-b3a7-7a0c-b29d-b74664dccbc3'), task_id='bash_task', dag_id='example_dag', run_id='scheduled__2025-07-05T08:22:37.356209+00:00', try_number=1, map_index=-1, hostname='airflow-scheduler-0.airflow-scheduler.airflow.svc.cluster.local', context_carrier=None, task=<Task(BashOperator): bash_task>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 7, 5, 8, 26, 34, 397222, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
